{"ast":null,"code":"var _jsxFileName = \"H:\\\\project\\\\first-project\\\\client\\\\src\\\\AddTable.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport axios from \"axios\";\nimport * as XLSX from \"xlsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddTable = () => {\n  _s();\n  const [selectedTable, setSelectedTable] = useState(\"branch\");\n  const [formData, setFormData] = useState({});\n  const [message, setMessage] = useState(\"\");\n  const fileInputRef = useRef(null);\n\n  // Dropdown data for branch form\n  const [clusters, setClusters] = useState([]);\n  const [circles, setCircles] = useState([]);\n  const [clients, setClients] = useState([]);\n\n  // Load dropdown data once on mount\n  useEffect(() => {\n    const fetchDropdownData = async () => {\n      try {\n        const [clusterRes, circleRes, clientRes] = await Promise.all([axios.get(\"http://localhost:8888/api/tables/cluster\"), axios.get(\"http://localhost:8888/api/tables/circle\"), axios.get(\"http://localhost:8888/api/tables/client\")]);\n        setClusters(clusterRes.data || []);\n        setCircles(circleRes.data || []);\n        setClients(clientRes.data || []);\n      } catch (error) {\n        console.error(\"Error fetching dropdown data:\", error);\n      }\n    };\n    fetchDropdownData();\n  }, []);\n  const UNIQUE_FIELDS = {\n    user: \"email\",\n    branch: \"sol_id\",\n    vehicle: \"name\",\n    custodian: \"name\",\n    driver: \"name\",\n    cluster: \"name\",\n    circle: \"name\",\n    client: \"name\"\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleTableChange = e => {\n    setSelectedTable(e.target.value);\n    setFormData({});\n    if (fileInputRef.current) {\n      fileInputRef.current.value = null;\n    }\n    setMessage(\"\");\n  };\n  const getFieldsForTable = () => {\n    switch (selectedTable) {\n      case \"user\":\n        return [\"name\", \"email\"];\n      case \"branch\":\n        return [\"sol_id\", \"branch_name\", \"city\", \"cluster\", \"circle\", \"client\", \"bank_name\"];\n      case \"vehicle\":\n      case \"custodian\":\n      case \"driver\":\n      case \"cluster\":\n      case \"circle\":\n      case \"client\":\n        return [\"name\"];\n      default:\n        return [];\n    }\n  };\n  const readFileAsArrayBuffer = file => {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.onload = () => resolve(reader.result);\n      reader.onerror = () => reject(reader.error);\n      try {\n        reader.readAsArrayBuffer(file);\n      } catch (err) {\n        reject(err);\n      }\n    });\n  };\n  const handleSubmit = async () => {\n    try {\n      var _fileInputRef$current, _fileInputRef$current2;\n      setMessage(\"\");\n      const fileFromInput = (_fileInputRef$current = fileInputRef.current) === null || _fileInputRef$current === void 0 ? void 0 : (_fileInputRef$current2 = _fileInputRef$current.files) === null || _fileInputRef$current2 === void 0 ? void 0 : _fileInputRef$current2[0];\n      if (fileFromInput) {\n        var _response$data;\n        let data;\n        try {\n          data = await readFileAsArrayBuffer(fileFromInput);\n        } catch (e) {\n          console.error(\"File reading error:\", e);\n          setMessage(\"File could not be read. Please reselect the file.\");\n          return;\n        }\n        const workbook = XLSX.read(data, {\n          type: \"array\"\n        });\n        const sheetName = workbook.SheetNames[0];\n        const worksheet = workbook.Sheets[sheetName];\n        const json = XLSX.utils.sheet_to_json(worksheet);\n        const uniqueField = UNIQUE_FIELDS[selectedTable];\n        const uniqueValues = new Set();\n        const filteredRows = [];\n        const duplicateRows = [];\n        for (const row of json) {\n          const key = row[uniqueField];\n          if (key == null || key === \"\") {\n            duplicateRows.push({\n              reason: `Missing ${uniqueField}`,\n              row\n            });\n          } else if (uniqueValues.has(key)) {\n            duplicateRows.push({\n              reason: `Duplicate in file: ${key}`,\n              row\n            });\n          } else {\n            uniqueValues.add(key);\n            filteredRows.push(row);\n          }\n        }\n        if (filteredRows.length === 0) {\n          setMessage(\"No valid rows found in file. All are missing or duplicate.\");\n          return;\n        }\n        const formData = new FormData();\n        formData.append(\"file\", fileFromInput);\n        formData.append(\"table\", selectedTable);\n        const response = await axios.put(\"http://localhost:8888/api/upload-file\", formData, {\n          headers: {\n            \"Content-Type\": \"multipart/form-data\"\n          }\n        });\n        if (((_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.inserted) > 0) {\n          setMessage(`${response.data.inserted} rows inserted successfully.` + (duplicateRows.length ? ` ${duplicateRows.length} duplicate rows were skipped.` : \"\"));\n        } else {\n          setMessage(\"No rows inserted. All rows might be duplicates.\");\n        }\n        return;\n      }\n\n      // Manual form entry\n      const uniqueKey = UNIQUE_FIELDS[selectedTable];\n      if (!formData[uniqueKey]) {\n        setMessage(`Please enter ${uniqueKey}`);\n        return;\n      }\n      const response = await axios.post(\"http://localhost:8888/api/add-entry\", {\n        table: selectedTable,\n        data: formData\n      });\n      if (response.data.success) {\n        setMessage(\"Entry added successfully.\");\n        setFormData({});\n      } else if (response.data.duplicate) {\n        setMessage(`Duplicate entry for ${uniqueKey}: ${formData[uniqueKey]}`);\n      } else {\n        setMessage(\"Failed to add entry.\");\n      }\n    } catch (err) {\n      var _err$response, _err$response$data;\n      console.error(\"Submit Error:\", err);\n      setMessage((err === null || err === void 0 ? void 0 : (_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || \"Unexpected error occurred while submitting.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: \"600px\",\n      margin: \"20px auto\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add Data to Table\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Choose Table:\", /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedTable,\n        onChange: handleTableChange,\n        style: {\n          marginLeft: 10\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"user\",\n          children: \"User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"branch\",\n          children: \"Branch\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"vehicle\",\n          children: \"Vehicle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"custodian\",\n          children: \"Custodian\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"driver\",\n          children: \"Driver\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"cluster\",\n          children: \"Cluster\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"circle\",\n          children: \"Circle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"client\",\n          children: \"Client\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Manual Entry:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this), getFieldsForTable().map(field => {\n        if (selectedTable === \"branch\" && (field === \"cluster\" || field === \"circle\" || field === \"client\")) {\n          // Dropdown fields for branch form\n          let options = [];\n          if (field === \"cluster\") options = clusters;else if (field === \"circle\") options = circles;else if (field === \"client\") options = clients;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginBottom: \"10px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: [field, \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              name: field,\n              value: formData[field] || \"\",\n              onChange: handleInputChange,\n              style: {\n                width: \"100%\",\n                padding: 6\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: [\"Select \", field]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 19\n              }, this), options.map(opt => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: opt.name,\n                children: opt.name\n              }, opt._id || opt.name, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 17\n            }, this)]\n          }, field, true, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 15\n          }, this);\n        } else {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginBottom: \"10px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: [field, \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: field,\n              value: formData[field] || \"\",\n              onChange: handleInputChange,\n              style: {\n                width: \"100%\",\n                padding: 6\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 17\n            }, this)]\n          }, field, true, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 15\n          }, this);\n        }\n      }), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        style: {\n          marginTop: \"10px\",\n          padding: \"10px 16px\",\n          backgroundColor: \"#007bff\",\n          color: \"white\",\n          border: \"none\",\n          borderRadius: 6,\n          cursor: \"pointer\"\n        },\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      style: {\n        margin: \"20px 0\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"OR Upload Excel File:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \".xlsx, .xls\",\n        ref: fileInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        style: {\n          marginTop: \"10px\",\n          padding: \"10px 16px\",\n          backgroundColor: \"#28a745\",\n          color: \"white\",\n          border: \"none\",\n          borderRadius: 6,\n          cursor: \"pointer\"\n        },\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        marginTop: \"20px\",\n        color: message.startsWith(\"Failed\") ? \"red\" : \"green\"\n      },\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 186,\n    columnNumber: 5\n  }, this);\n};\n_s(AddTable, \"+QUYDyPUvog0aT/pexY3/rmw7SU=\");\n_c = AddTable;\nexport default AddTable;\nvar _c;\n$RefreshReg$(_c, \"AddTable\");","map":{"version":3,"names":["React","useState","useRef","useEffect","axios","XLSX","jsxDEV","_jsxDEV","AddTable","_s","selectedTable","setSelectedTable","formData","setFormData","message","setMessage","fileInputRef","clusters","setClusters","circles","setCircles","clients","setClients","fetchDropdownData","clusterRes","circleRes","clientRes","Promise","all","get","data","error","console","UNIQUE_FIELDS","user","branch","vehicle","custodian","driver","cluster","circle","client","handleInputChange","e","name","value","target","prev","handleTableChange","current","getFieldsForTable","readFileAsArrayBuffer","file","resolve","reject","reader","FileReader","onload","result","onerror","readAsArrayBuffer","err","handleSubmit","_fileInputRef$current","_fileInputRef$current2","fileFromInput","files","_response$data","workbook","read","type","sheetName","SheetNames","worksheet","Sheets","json","utils","sheet_to_json","uniqueField","uniqueValues","Set","filteredRows","duplicateRows","row","key","push","reason","has","add","length","FormData","append","response","put","headers","inserted","uniqueKey","post","table","success","duplicate","_err$response","_err$response$data","style","maxWidth","margin","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","marginLeft","marginTop","map","field","options","marginBottom","width","padding","opt","_id","onClick","backgroundColor","color","border","borderRadius","cursor","accept","ref","startsWith","_c","$RefreshReg$"],"sources":["H:/project/first-project/client/src/AddTable.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport * as XLSX from \"xlsx\";\r\n\r\nconst AddTable = () => {\r\n  const [selectedTable, setSelectedTable] = useState(\"branch\");\r\n  const [formData, setFormData] = useState({});\r\n  const [message, setMessage] = useState(\"\");\r\n  const fileInputRef = useRef(null);\r\n\r\n  // Dropdown data for branch form\r\n  const [clusters, setClusters] = useState([]);\r\n  const [circles, setCircles] = useState([]);\r\n  const [clients, setClients] = useState([]);\r\n\r\n  // Load dropdown data once on mount\r\n  useEffect(() => {\r\n    const fetchDropdownData = async () => {\r\n      try {\r\n        const [clusterRes, circleRes, clientRes] = await Promise.all([\r\n          axios.get(\"http://localhost:8888/api/tables/cluster\"),\r\n          axios.get(\"http://localhost:8888/api/tables/circle\"),\r\n          axios.get(\"http://localhost:8888/api/tables/client\"),\r\n        ]);\r\n        setClusters(clusterRes.data || []);\r\n        setCircles(circleRes.data || []);\r\n        setClients(clientRes.data || []);\r\n      } catch (error) {\r\n        console.error(\"Error fetching dropdown data:\", error);\r\n      }\r\n    };\r\n    fetchDropdownData();\r\n  }, []);\r\n\r\n  const UNIQUE_FIELDS = {\r\n    user: \"email\",\r\n    branch: \"sol_id\",\r\n    vehicle: \"name\",\r\n    custodian: \"name\",\r\n    driver: \"name\",\r\n    cluster: \"name\",\r\n    circle: \"name\",\r\n    client: \"name\",\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleTableChange = (e) => {\r\n    setSelectedTable(e.target.value);\r\n    setFormData({});\r\n    if (fileInputRef.current) {\r\n      fileInputRef.current.value = null;\r\n    }\r\n    setMessage(\"\");\r\n  };\r\n\r\n  const getFieldsForTable = () => {\r\n    switch (selectedTable) {\r\n      case \"user\":\r\n        return [\"name\", \"email\"];\r\n      case \"branch\":\r\n        return [\"sol_id\", \"branch_name\", \"city\", \"cluster\", \"circle\", \"client\", \"bank_name\"];\r\n      case \"vehicle\":\r\n      case \"custodian\":\r\n      case \"driver\":\r\n      case \"cluster\":\r\n      case \"circle\":\r\n      case \"client\":\r\n        return [\"name\"];\r\n      default:\r\n        return [];\r\n    }\r\n  };\r\n\r\n  const readFileAsArrayBuffer = (file) => {\r\n    return new Promise((resolve, reject) => {\r\n      const reader = new FileReader();\r\n      reader.onload = () => resolve(reader.result);\r\n      reader.onerror = () => reject(reader.error);\r\n      try {\r\n        reader.readAsArrayBuffer(file);\r\n      } catch (err) {\r\n        reject(err);\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    try {\r\n      setMessage(\"\");\r\n\r\n      const fileFromInput = fileInputRef.current?.files?.[0];\r\n\r\n      if (fileFromInput) {\r\n        let data;\r\n        try {\r\n          data = await readFileAsArrayBuffer(fileFromInput);\r\n        } catch (e) {\r\n          console.error(\"File reading error:\", e);\r\n          setMessage(\"File could not be read. Please reselect the file.\");\r\n          return;\r\n        }\r\n\r\n        const workbook = XLSX.read(data, { type: \"array\" });\r\n        const sheetName = workbook.SheetNames[0];\r\n        const worksheet = workbook.Sheets[sheetName];\r\n        const json = XLSX.utils.sheet_to_json(worksheet);\r\n\r\n        const uniqueField = UNIQUE_FIELDS[selectedTable];\r\n        const uniqueValues = new Set();\r\n        const filteredRows = [];\r\n        const duplicateRows = [];\r\n\r\n        for (const row of json) {\r\n          const key = row[uniqueField];\r\n          if (key == null || key === \"\") {\r\n            duplicateRows.push({ reason: `Missing ${uniqueField}`, row });\r\n          } else if (uniqueValues.has(key)) {\r\n            duplicateRows.push({ reason: `Duplicate in file: ${key}`, row });\r\n          } else {\r\n            uniqueValues.add(key);\r\n            filteredRows.push(row);\r\n          }\r\n        }\r\n\r\n        if (filteredRows.length === 0) {\r\n          setMessage(\"No valid rows found in file. All are missing or duplicate.\");\r\n          return;\r\n        }\r\n\r\n        const formData = new FormData();\r\n        formData.append(\"file\", fileFromInput);\r\n        formData.append(\"table\", selectedTable);\r\n\r\n        const response = await axios.put(\"http://localhost:8888/api/upload-file\", formData, {\r\n          headers: { \"Content-Type\": \"multipart/form-data\" },\r\n        });\r\n\r\n        if (response.data?.inserted > 0) {\r\n          setMessage(\r\n            `${response.data.inserted} rows inserted successfully.` +\r\n              (duplicateRows.length\r\n                ? ` ${duplicateRows.length} duplicate rows were skipped.`\r\n                : \"\")\r\n          );\r\n        } else {\r\n          setMessage(\"No rows inserted. All rows might be duplicates.\");\r\n        }\r\n\r\n        return;\r\n      }\r\n\r\n      // Manual form entry\r\n      const uniqueKey = UNIQUE_FIELDS[selectedTable];\r\n      if (!formData[uniqueKey]) {\r\n        setMessage(`Please enter ${uniqueKey}`);\r\n        return;\r\n      }\r\n\r\n      const response = await axios.post(\"http://localhost:8888/api/add-entry\", {\r\n        table: selectedTable,\r\n        data: formData,\r\n      });\r\n\r\n      if (response.data.success) {\r\n        setMessage(\"Entry added successfully.\");\r\n        setFormData({});\r\n      } else if (response.data.duplicate) {\r\n        setMessage(`Duplicate entry for ${uniqueKey}: ${formData[uniqueKey]}`);\r\n      } else {\r\n        setMessage(\"Failed to add entry.\");\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Submit Error:\", err);\r\n      setMessage(\r\n        err?.response?.data?.message ||\r\n          \"Unexpected error occurred while submitting.\"\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ maxWidth: \"600px\", margin: \"20px auto\" }}>\r\n      <h2>Add Data to Table</h2>\r\n\r\n      <label>\r\n        Choose Table:\r\n        <select value={selectedTable} onChange={handleTableChange} style={{ marginLeft: 10 }}>\r\n          <option value=\"user\">User</option>\r\n          <option value=\"branch\">Branch</option>\r\n          <option value=\"vehicle\">Vehicle</option>\r\n          <option value=\"custodian\">Custodian</option>\r\n          <option value=\"driver\">Driver</option>\r\n          <option value=\"cluster\">Cluster</option>\r\n          <option value=\"circle\">Circle</option>\r\n          <option value=\"client\">Client</option>\r\n        </select>\r\n      </label>\r\n\r\n      <div style={{ marginTop: \"20px\" }}>\r\n        <h4>Manual Entry:</h4>\r\n\r\n        {getFieldsForTable().map((field) => {\r\n          if (selectedTable === \"branch\" && (field === \"cluster\" || field === \"circle\" || field === \"client\")) {\r\n            // Dropdown fields for branch form\r\n            let options = [];\r\n            if (field === \"cluster\") options = clusters;\r\n            else if (field === \"circle\") options = circles;\r\n            else if (field === \"client\") options = clients;\r\n\r\n            return (\r\n              <div key={field} style={{ marginBottom: \"10px\" }}>\r\n                <label>{field}:</label>\r\n                <select\r\n                  name={field}\r\n                  value={formData[field] || \"\"}\r\n                  onChange={handleInputChange}\r\n                  style={{ width: \"100%\", padding: 6 }}\r\n                >\r\n                  <option value=\"\">Select {field}</option>\r\n                  {options.map((opt) => (\r\n                    <option key={opt._id || opt.name} value={opt.name}>\r\n                      {opt.name}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n            );\r\n          } else {\r\n            return (\r\n              <div key={field} style={{ marginBottom: \"10px\" }}>\r\n                <label>{field}:</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name={field}\r\n                  value={formData[field] || \"\"}\r\n                  onChange={handleInputChange}\r\n                  style={{ width: \"100%\", padding: 6 }}\r\n                />\r\n              </div>\r\n            );\r\n          }\r\n        })}\r\n\r\n        <button\r\n          onClick={handleSubmit}\r\n          style={{\r\n            marginTop: \"10px\",\r\n            padding: \"10px 16px\",\r\n            backgroundColor: \"#007bff\",\r\n            color: \"white\",\r\n            border: \"none\",\r\n            borderRadius: 6,\r\n            cursor: \"pointer\",\r\n          }}\r\n        >\r\n          Submit\r\n        </button>\r\n      </div>\r\n\r\n      <hr style={{ margin: \"20px 0\" }} />\r\n\r\n      <div>\r\n        <h4>OR Upload Excel File:</h4>\r\n        <input type=\"file\" accept=\".xlsx, .xls\" ref={fileInputRef} />\r\n        <button\r\n          onClick={handleSubmit}\r\n          style={{\r\n            marginTop: \"10px\",\r\n            padding: \"10px 16px\",\r\n            backgroundColor: \"#28a745\",\r\n            color: \"white\",\r\n            border: \"none\",\r\n            borderRadius: 6,\r\n            cursor: \"pointer\",\r\n          }}\r\n        >\r\n          Upload\r\n        </button>\r\n      </div>\r\n\r\n      {message && (\r\n        <p style={{ marginTop: \"20px\", color: message.startsWith(\"Failed\") ? \"red\" : \"green\" }}>\r\n          {message}\r\n        </p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddTable;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}