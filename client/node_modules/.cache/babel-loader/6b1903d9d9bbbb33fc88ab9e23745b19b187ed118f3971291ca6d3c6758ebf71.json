{"ast":null,"code":"var _jsxFileName = \"H:\\\\project\\\\first-project\\\\client\\\\src\\\\ViewTables.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport * as XLSX from \"xlsx\";\nimport FileSaver from \"file-saver\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TABLE_ORDER = [{\n  name: \"kms_report\",\n  label: \"KMS Form\"\n}, {\n  name: \"activity_report\",\n  label: \"Activity Form\"\n}, {\n  name: \"client\",\n  label: \"Client\"\n}, {\n  name: \"circle\",\n  label: \"Circle\"\n}, {\n  name: \"cluster\",\n  label: \"Cluster\"\n}, {\n  name: \"branch\",\n  label: \"Branch\"\n}, {\n  name: \"custodian\",\n  label: \"Custodian\"\n}, {\n  name: \"driver\",\n  label: \"Driver\"\n}, {\n  name: \"vehicle\",\n  label: \"Vehicle\"\n}, {\n  name: \"user\",\n  label: \"User\"\n}];\nconst FIELD_ORDER = {\n  kms_report: [\"_id\", \"data_entry_date\", \"vehicle_id\", \"activity_date\", \"trip_id\", \"custodian_name\", \"driver_name\", \"branch_name\", \"sol_id\", \"cluster\", \"circle\", \"client\", \"trip_retrieval_count\", \"trip_fresh_pickup_count\", \"trip_return_retrieval_count\", \"trip_empty_boxes_delivered_count\", \"trip_opening_kms\", \"trip_closing_kms\", \"trip_kms\", \"remarks\", \"trip_branch_count\", \"branch_kms\", \"transaction_id\"],\n  circle: [\"_id\", \"name\", \"client\"],\n  cluster: [\"_id\", \"name\", \"circle\"],\n  client: [\"_id\", \"name\"],\n  branch: [\"_id\", \"sol_id\", \"branch_name\", \"cluster\", \"circle\", \"bank_name\"],\n  vehicle: [\"_id\", \"name\"],\n  custodian: [\"_id\", \"name\"],\n  driver: [\"_id\", \"name\"],\n  user: [\"_id\", \"name\", \"email\", \"role\"],\n  activity_report: []\n};\n// Helper function to safely format \"dd-mm-yyyy\" date strings\nconst formatDate = dateStr => {\n  if (!dateStr || typeof dateStr !== \"string\") return \"\";\n  const day = new Date(dateStr).getDate();\n  const month = new Date(dateStr).getMonth() + 1; // Months are zero-based\n  const year = new Date(dateStr).getFullYear();\n  if (!day || !month || !year) return \"\";\n  return `${day}-${month}-${year}`;\n};\nconst ViewTables = () => {\n  _s();\n  const [activeTable, setActiveTable] = useState(\"kms_report\");\n  const [tableData, setTableData] = useState([]);\n  const fetchTableData = async tableName => {\n    try {\n      const res = await axios.get(`https://first-project-hsch.onrender.com/api/tables/${tableName}`);\n      if (Array.isArray(res.data)) {\n        setTableData(res.data);\n      } else {\n        setTableData([]);\n      }\n    } catch (err) {\n      console.error(\"Error fetching table:\", err);\n      setTableData([]);\n    }\n  };\n  useEffect(() => {\n    fetchTableData(activeTable);\n  }, [activeTable]);\n  const formatHeader = key => key.replace(/_/g, \" \").replace(/\\b\\w/g, c => c.toUpperCase());\n  const formatCell = (key, value) => {\n    if (key === \"data_entry_date\" || key === \"activity_date\") {\n      return formatDate(value);\n    }\n    return value;\n  };\n  const exportToExcel = () => {\n    if (!Array.isArray(tableData) || tableData.length === 0) {\n      alert(\"No data available to export.\");\n      return;\n    }\n    let fieldOrder = FIELD_ORDER[activeTable] || Object.keys(tableData[0]);\n    fieldOrder = fieldOrder.filter(key => key !== \"_id\"); // always remove _id\n\n    const cleanedData = tableData.map((row, index) => {\n      const cleanedRow = {\n        \"S. No.\": index + 1\n      }; // Add serial number\n\n      if (activeTable === \"branch\") {\n        var _row$sol_id, _row$branch_name, _row$city, _row$circle, _row$bank_name;\n        // Force sol_id before branch_name, rename city to Cluster\n        cleanedRow[\"sol_id\"] = (_row$sol_id = row.sol_id) !== null && _row$sol_id !== void 0 ? _row$sol_id : \"\";\n        cleanedRow[\"branch_name\"] = (_row$branch_name = row.branch_name) !== null && _row$branch_name !== void 0 ? _row$branch_name : \"\";\n        cleanedRow[\"Cluster\"] = (_row$city = row.city) !== null && _row$city !== void 0 ? _row$city : \"\";\n        cleanedRow[\"circle\"] = (_row$circle = row.circle) !== null && _row$circle !== void 0 ? _row$circle : \"\";\n        cleanedRow[\"bank_name\"] = (_row$bank_name = row.bank_name) !== null && _row$bank_name !== void 0 ? _row$bank_name : \"\";\n      } else {\n        fieldOrder.forEach(key => {\n          var _row$key;\n          cleanedRow[key] = (_row$key = row[key]) !== null && _row$key !== void 0 ? _row$key : \"\";\n        });\n      }\n      return cleanedRow;\n    });\n    const worksheet = XLSX.utils.json_to_sheet(cleanedData);\n    const workbook = XLSX.utils.book_new();\n    XLSX.utils.book_append_sheet(workbook, worksheet, activeTable);\n    const excelBuffer = XLSX.write(workbook, {\n      bookType: \"xlsx\",\n      type: \"array\"\n    });\n    const blob = new Blob([excelBuffer], {\n      type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\"\n    });\n    FileSaver.saveAs(blob, `${activeTable}.xlsx`);\n  };\n  const renderTableHeader = () => {\n    let fieldOrder = FIELD_ORDER[activeTable] || Object.keys(tableData[0] || {});\n\n    // For branch table only: move sol_id before branch_name\n    if (activeTable === \"branch\") {\n      fieldOrder = fieldOrder.filter(key => key !== \"_id\"); // remove _id\n      const solIndex = fieldOrder.indexOf(\"sol_id\");\n      const branchIndex = fieldOrder.indexOf(\"branch_name\");\n      if (solIndex > -1 && branchIndex > -1 && solIndex > branchIndex) {\n        fieldOrder.splice(solIndex, 1); // remove sol_id\n        fieldOrder.splice(branchIndex, 0, \"sol_id\"); // insert before branch_name\n      }\n    } else {\n      fieldOrder = fieldOrder.filter(key => key !== \"_id\"); // normal table _id removal\n    }\n    return /*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"S. No.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 9\n        }, this), fieldOrder.map((key, index) => /*#__PURE__*/_jsxDEV(\"th\", {\n          children: activeTable === \"branch\" && key === \"city\" ? \"Cluster\" : formatHeader(key)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 5\n    }, this);\n  };\n  const renderTableRows = () => {\n    if (!tableData.length) {\n      return /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            colSpan: \"100%\",\n            children: \"No records found\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 7\n      }, this);\n    }\n    let fieldOrder = FIELD_ORDER[activeTable] || Object.keys(tableData[0]);\n    if (activeTable === \"branch\") {\n      fieldOrder = fieldOrder.filter(key => key !== \"_id\");\n      const solIndex = fieldOrder.indexOf(\"sol_id\");\n      const branchIndex = fieldOrder.indexOf(\"branch_name\");\n      if (solIndex > -1 && branchIndex > -1 && solIndex > branchIndex) {\n        fieldOrder.splice(solIndex, 1);\n        fieldOrder.splice(branchIndex, 0, \"sol_id\");\n      }\n    } else {\n      fieldOrder = fieldOrder.filter(key => key !== \"_id\");\n    }\n    const narrowTables = [\"custodian\", \"driver\", \"vehicle\"];\n    return /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: tableData.map((row, idx) => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          style: {\n            width: \"50px\",\n            textAlign: \"center\"\n          },\n          children: idx + 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this), fieldOrder.map((key, index) => /*#__PURE__*/_jsxDEV(\"td\", {\n          style: narrowTables.includes(activeTable) ? {\n            width: \"150px\",\n            textAlign: \"center\"\n          } : {},\n          children: formatCell(key, row[key])\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }, this))]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 5\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: \"15px\"\n      },\n      children: TABLE_ORDER.map(table => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setActiveTable(table.name),\n        style: {\n          marginRight: \"8px\",\n          padding: \"8px 16px\",\n          backgroundColor: activeTable === table.name ? \"#007bff\" : \"#e0e0e0\",\n          color: activeTable === table.name ? \"white\" : \"black\",\n          border: \"none\",\n          borderRadius: \"6px\",\n          cursor: \"pointer\"\n        },\n        children: table.label\n      }, table.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: exportToExcel,\n      style: {\n        marginBottom: \"15px\",\n        padding: \"8px 16px\",\n        backgroundColor: \"#28a745\",\n        color: \"white\",\n        border: \"none\",\n        borderRadius: \"6px\",\n        cursor: \"pointer\"\n      },\n      children: \"Export to Excel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        overflowX: \"auto\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        border: \"1\",\n        cellPadding: \"8\",\n        cellSpacing: \"0\",\n        style: {\n          width: \"100%\",\n          borderCollapse: \"collapse\"\n        },\n        children: [renderTableHeader(), renderTableRows()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 209,\n    columnNumber: 5\n  }, this);\n};\n_s(ViewTables, \"fwX9sJiLSDga69NaWx73KwHpRyk=\");\n_c = ViewTables;\nexport default ViewTables;\nvar _c;\n$RefreshReg$(_c, \"ViewTables\");","map":{"version":3,"names":["React","useEffect","useState","axios","XLSX","FileSaver","jsxDEV","_jsxDEV","TABLE_ORDER","name","label","FIELD_ORDER","kms_report","circle","cluster","client","branch","vehicle","custodian","driver","user","activity_report","formatDate","dateStr","day","Date","getDate","month","getMonth","year","getFullYear","ViewTables","_s","activeTable","setActiveTable","tableData","setTableData","fetchTableData","tableName","res","get","Array","isArray","data","err","console","error","formatHeader","key","replace","c","toUpperCase","formatCell","value","exportToExcel","length","alert","fieldOrder","Object","keys","filter","cleanedData","map","row","index","cleanedRow","_row$sol_id","_row$branch_name","_row$city","_row$circle","_row$bank_name","sol_id","branch_name","city","bank_name","forEach","_row$key","worksheet","utils","json_to_sheet","workbook","book_new","book_append_sheet","excelBuffer","write","bookType","type","blob","Blob","saveAs","renderTableHeader","solIndex","indexOf","branchIndex","splice","children","fileName","_jsxFileName","lineNumber","columnNumber","renderTableRows","colSpan","narrowTables","idx","style","width","textAlign","includes","padding","marginBottom","table","onClick","marginRight","backgroundColor","color","border","borderRadius","cursor","overflowX","cellPadding","cellSpacing","borderCollapse","_c","$RefreshReg$"],"sources":["H:/project/first-project/client/src/ViewTables.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport * as XLSX from \"xlsx\";\r\nimport FileSaver from \"file-saver\";\r\n\r\nconst TABLE_ORDER = [\r\n  { name: \"kms_report\", label: \"KMS Form\" },\r\n  { name: \"activity_report\", label: \"Activity Form\" },\r\n  { name: \"client\", label: \"Client\" },\r\n  { name: \"circle\", label: \"Circle\" },\r\n  { name: \"cluster\", label: \"Cluster\" },\r\n  { name: \"branch\", label: \"Branch\" },\r\n  { name: \"custodian\", label: \"Custodian\" },\r\n  { name: \"driver\", label: \"Driver\" },\r\n  { name: \"vehicle\", label: \"Vehicle\" },\r\n  { name: \"user\", label: \"User\" },\r\n];\r\n\r\nconst FIELD_ORDER = {\r\n  kms_report: [\r\n    \"_id\", \"data_entry_date\", \"vehicle_id\", \"activity_date\", \"trip_id\",\r\n    \"custodian_name\", \"driver_name\", \"branch_name\", \"sol_id\", \"cluster\",\r\n    \"circle\", \"client\", \"trip_retrieval_count\", \"trip_fresh_pickup_count\",\r\n    \"trip_return_retrieval_count\", \"trip_empty_boxes_delivered_count\",\r\n    \"trip_opening_kms\", \"trip_closing_kms\", \"trip_kms\", \"remarks\",\r\n    \"trip_branch_count\", \"branch_kms\", \"transaction_id\"\r\n  ],\r\n  \r\n  circle: [\"_id\", \"name\", \"client\"],\r\n  cluster: [\"_id\", \"name\", \"circle\"],\r\n  client: [\"_id\", \"name\"],\r\n  branch: [\"_id\", \"sol_id\", \"branch_name\", \"cluster\", \"circle\", \"bank_name\"],\r\n  vehicle: [\"_id\", \"name\"],\r\n  custodian: [\"_id\", \"name\"],\r\n  driver: [\"_id\", \"name\"],\r\n  user: [\"_id\", \"name\", \"email\", \"role\"],\r\n  activity_report: []\r\n};\r\n// Helper function to safely format \"dd-mm-yyyy\" date strings\r\nconst formatDate = (dateStr) => {\r\n  if (!dateStr || typeof dateStr !== \"string\") return \"\";\r\n  const day = new Date(dateStr).getDate();\r\n  const month = new Date(dateStr).getMonth() + 1; // Months are zero-based\r\n  const year = new Date(dateStr).getFullYear();\r\n  if (!day || !month || !year) return \"\";\r\n  return `${day}-${month}-${year}`;\r\n};\r\n\r\nconst ViewTables = () => {\r\n  const [activeTable, setActiveTable] = useState(\"kms_report\");\r\n  const [tableData, setTableData] = useState([]);\r\n\r\n  const fetchTableData = async (tableName) => {\r\n    try {\r\n      const res = await axios.get(`https://first-project-hsch.onrender.com/api/tables/${tableName}`);\r\n      if (Array.isArray(res.data)) {\r\n        setTableData(res.data);\r\n      } else {\r\n        setTableData([]);\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Error fetching table:\", err);\r\n      setTableData([]);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchTableData(activeTable);\r\n  }, [activeTable]);\r\n\r\n  const formatHeader = (key) =>\r\n    key.replace(/_/g, \" \").replace(/\\b\\w/g, (c) => c.toUpperCase());\r\n\r\n  \r\n   \r\n  const formatCell = (key, value) => {\r\n  if (key === \"data_entry_date\" || key === \"activity_date\") {\r\n    return formatDate(value);\r\n  }\r\n  return value;\r\n};\r\n\r\nconst exportToExcel = () => {\r\n  if (!Array.isArray(tableData) || tableData.length === 0) {\r\n    alert(\"No data available to export.\");\r\n    return;\r\n  }\r\n\r\n  let fieldOrder = FIELD_ORDER[activeTable] || Object.keys(tableData[0]);\r\n  fieldOrder = fieldOrder.filter((key) => key !== \"_id\"); // always remove _id\r\n\r\n  const cleanedData = tableData.map((row, index) => {\r\n    const cleanedRow = { \"S. No.\": index + 1 }; // Add serial number\r\n\r\n    if (activeTable === \"branch\") {\r\n      // Force sol_id before branch_name, rename city to Cluster\r\n      cleanedRow[\"sol_id\"] = row.sol_id ?? \"\";\r\n      cleanedRow[\"branch_name\"] = row.branch_name ?? \"\";\r\n      cleanedRow[\"Cluster\"] = row.city ?? \"\";\r\n      cleanedRow[\"circle\"] = row.circle ?? \"\";\r\n      cleanedRow[\"bank_name\"] = row.bank_name ?? \"\";\r\n    } else {\r\n      fieldOrder.forEach((key) => {\r\n        cleanedRow[key] = row[key] ?? \"\";\r\n      });\r\n    }\r\n\r\n    return cleanedRow;\r\n  });\r\n\r\n  const worksheet = XLSX.utils.json_to_sheet(cleanedData);\r\n  const workbook = XLSX.utils.book_new();\r\n  XLSX.utils.book_append_sheet(workbook, worksheet, activeTable);\r\n\r\n  const excelBuffer = XLSX.write(workbook, { bookType: \"xlsx\", type: \"array\" });\r\n  const blob = new Blob([excelBuffer], {\r\n    type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\r\n  });\r\n\r\n  FileSaver.saveAs(blob, `${activeTable}.xlsx`);\r\n};\r\n\r\n\r\n\r\n  const renderTableHeader = () => {\r\n  let fieldOrder = FIELD_ORDER[activeTable] || Object.keys(tableData[0] || {});\r\n\r\n  // For branch table only: move sol_id before branch_name\r\n  if (activeTable === \"branch\") {\r\n    fieldOrder = fieldOrder.filter(key => key !== \"_id\"); // remove _id\r\n    const solIndex = fieldOrder.indexOf(\"sol_id\");\r\n    const branchIndex = fieldOrder.indexOf(\"branch_name\");\r\n\r\n    if (solIndex > -1 && branchIndex > -1 && solIndex > branchIndex) {\r\n      fieldOrder.splice(solIndex, 1); // remove sol_id\r\n      fieldOrder.splice(branchIndex, 0, \"sol_id\"); // insert before branch_name\r\n    }\r\n  } else {\r\n    fieldOrder = fieldOrder.filter(key => key !== \"_id\"); // normal table _id removal\r\n  }\r\n\r\n  return (\r\n    <thead>\r\n      <tr>\r\n        <th>S. No.</th>\r\n        {fieldOrder.map((key, index) => (\r\n          <th key={index}>\r\n            {activeTable === \"branch\" && key === \"city\" ? \"Cluster\" : formatHeader(key)}\r\n          </th>\r\n        ))}\r\n      </tr>\r\n    </thead>\r\n  );\r\n};\r\n\r\nconst renderTableRows = () => {\r\n  if (!tableData.length) {\r\n    return (\r\n      <tbody>\r\n        <tr>\r\n          <td colSpan=\"100%\">No records found</td>\r\n        </tr>\r\n      </tbody>\r\n    );\r\n  }\r\n\r\n  let fieldOrder = FIELD_ORDER[activeTable] || Object.keys(tableData[0]);\r\n\r\n  if (activeTable === \"branch\") {\r\n    fieldOrder = fieldOrder.filter(key => key !== \"_id\");\r\n    const solIndex = fieldOrder.indexOf(\"sol_id\");\r\n    const branchIndex = fieldOrder.indexOf(\"branch_name\");\r\n\r\n    if (solIndex > -1 && branchIndex > -1 && solIndex > branchIndex) {\r\n      fieldOrder.splice(solIndex, 1);\r\n      fieldOrder.splice(branchIndex, 0, \"sol_id\");\r\n    }\r\n  } else {\r\n    fieldOrder = fieldOrder.filter(key => key !== \"_id\");\r\n  }\r\n\r\n  const narrowTables = [\"custodian\", \"driver\", \"vehicle\"];\r\n\r\n  return (\r\n    <tbody>\r\n      {tableData.map((row, idx) => (\r\n        <tr key={idx}>\r\n          <td style={{ width: \"50px\", textAlign: \"center\" }}>{idx + 1}</td>\r\n          {fieldOrder.map((key, index) => (\r\n            <td\r\n              key={index}\r\n              style={\r\n                narrowTables.includes(activeTable)\r\n                  ? { width: \"150px\", textAlign: \"center\" }\r\n                  : {}\r\n              }\r\n            >\r\n              {formatCell(key, row[key])}\r\n            </td>\r\n          ))}\r\n        </tr>\r\n      ))}\r\n    </tbody>\r\n  );\r\n};\r\n\r\n\r\n  return (\r\n    <div style={{ padding: \"20px\" }}>\r\n      <div style={{ marginBottom: \"15px\" }}>\r\n        {TABLE_ORDER.map((table) => (\r\n          <button\r\n            key={table.name}\r\n            onClick={() => setActiveTable(table.name)}\r\n            style={{\r\n              marginRight: \"8px\",\r\n              padding: \"8px 16px\",\r\n              backgroundColor: activeTable === table.name ? \"#007bff\" : \"#e0e0e0\",\r\n              color: activeTable === table.name ? \"white\" : \"black\",\r\n              border: \"none\",\r\n              borderRadius: \"6px\",\r\n              cursor: \"pointer\",\r\n            }}\r\n          >\r\n            {table.label}\r\n          </button>\r\n        ))}\r\n      </div>\r\n\r\n      <button\r\n        onClick={exportToExcel}\r\n        style={{\r\n          marginBottom: \"15px\",\r\n          padding: \"8px 16px\",\r\n          backgroundColor: \"#28a745\",\r\n          color: \"white\",\r\n          border: \"none\",\r\n          borderRadius: \"6px\",\r\n          cursor: \"pointer\",\r\n        }}\r\n      >\r\n        Export to Excel\r\n      </button>\r\n\r\n      <div style={{ overflowX: \"auto\" }}>\r\n        <table\r\n          border=\"1\"\r\n          cellPadding=\"8\"\r\n          cellSpacing=\"0\"\r\n          style={{ width: \"100%\", borderCollapse: \"collapse\" }}\r\n        >\r\n          {renderTableHeader()}\r\n          {renderTableRows()}\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ViewTables;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}