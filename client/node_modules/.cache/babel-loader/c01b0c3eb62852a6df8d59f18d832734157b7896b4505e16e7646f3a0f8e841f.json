{"ast":null,"code":"var _jsxFileName = \"H:\\\\project\\\\first-project\\\\client\\\\src\\\\AddTable.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from \"react\";\nimport axios from \"axios\";\nimport * as XLSX from \"xlsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddTable = () => {\n  _s();\n  const [selectedTable, setSelectedTable] = useState(\"branch\");\n  const [formData, setFormData] = useState({});\n  const [message, setMessage] = useState(\"\");\n  const fileInputRef = useRef(null); // <-- Important: useRef for file input\n\n  const UNIQUE_FIELDS = {\n    add_user: [\"email\", \"name\"],\n    branch: [\"sol_id\", \"branch_name\"],\n    vehicle: [\"name\"],\n    custodian: [\"name\"],\n    driver: [\"name\"]\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleTableChange = e => {\n    setSelectedTable(e.target.value);\n    setFormData({});\n    if (fileInputRef.current) {\n      fileInputRef.current.value = null;\n    }\n    setMessage(\"\");\n  };\n  const getFieldsForTable = () => {\n    switch (selectedTable) {\n      case \"add_user\":\n        return [\"name\", \"email\", \"password\", \"role\"];\n      case \"branch\":\n        return [\"sol_id\", \"branch_name\", \"city\", \"circle\", \"bank_name\"];\n      case \"vehicle\":\n      case \"custodian\":\n      case \"driver\":\n        return [\"name\"];\n      default:\n        return [];\n    }\n  };\n  const readFileAsArrayBuffer = file => {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.onload = () => resolve(reader.result);\n      reader.onerror = () => reject(reader.error);\n      try {\n        reader.readAsArrayBuffer(file);\n      } catch (err) {\n        reject(err);\n      }\n    });\n  };\n  const handleSubmit = async () => {\n    var _fileInputRef$current, _fileInputRef$current2;\n    if (!selectedTable) {\n      setMessage(\"Please select a table.\");\n      return;\n    }\n\n    // Check if file is selected for upload\n    const fileFromInput = (_fileInputRef$current = fileInputRef.current) === null || _fileInputRef$current === void 0 ? void 0 : (_fileInputRef$current2 = _fileInputRef$current.files) === null || _fileInputRef$current2 === void 0 ? void 0 : _fileInputRef$current2[0];\n    if (fileFromInput) {\n      try {\n        var _response$data;\n        const data = await readFileAsArrayBuffer(fileFromInput);\n        const workbook = XLSX.read(data, {\n          type: \"array\"\n        });\n        const sheetName = workbook.SheetNames[0];\n        const worksheet = workbook.Sheets[sheetName];\n        const json = XLSX.utils.sheet_to_json(worksheet);\n        const uniqueFields = UNIQUE_FIELDS[selectedTable];\n        const uniqueValues = new Set();\n        const filteredRows = [];\n        const duplicateRows = [];\n        for (const row of json) {\n          // Support multiple unique fields\n          const key = Array.isArray(uniqueFields) ? uniqueFields.map(f => row[f]).join(\"|\") : row[uniqueFields];\n          if (key == null || key === \"\" || Array.isArray(uniqueFields) && uniqueFields.some(f => !row[f] || row[f] === \"\")) {\n            duplicateRows.push({\n              reason: `Missing ${uniqueFields}`,\n              row\n            });\n          } else if (uniqueValues.has(key)) {\n            duplicateRows.push({\n              reason: `Duplicate in file: ${key}`,\n              row\n            });\n          } else {\n            uniqueValues.add(key);\n            filteredRows.push(row);\n          }\n        }\n        if (filteredRows.length === 0) {\n          setMessage(\"No valid rows found in file. All are missing or duplicate.\");\n          return;\n        }\n        const uploadFormData = new FormData();\n        uploadFormData.append(\"file\", fileFromInput); // correct file object\n        uploadFormData.append(\"table\", selectedTable);\n        const response = await axios.put(\"https://first-project-hsch.onrender.com/api/upload-file\", uploadFormData, {\n          headers: {\n            \"Content-Type\": \"multipart/form-data\"\n          }\n        });\n        if (((_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.inserted) > 0) {\n          setMessage(`${response.data.inserted} rows inserted successfully.` + (duplicateRows.length ? ` ${duplicateRows.length} duplicate rows were skipped.` : \"\"));\n        } else {\n          setMessage(\"No rows inserted. All rows might be duplicates.\");\n        }\n        setFormData({});\n        fileInputRef.current.value = null;\n        return; // Exit after file upload\n      } catch (err) {\n        var _err$response, _err$response$data;\n        setMessage((err === null || err === void 0 ? void 0 : (_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || \"Unexpected error occurred while uploading file.\");\n        return;\n      }\n    }\n\n    // Manual form entry\n    const uniqueKeys = UNIQUE_FIELDS[selectedTable];\n    const missingKeys = uniqueKeys.filter(key => !formData[key]);\n    if (missingKeys.length > 0) {\n      setMessage(`Please enter: ${missingKeys.join(\", \")}`);\n      return;\n    }\n    try {\n      const response = await axios.post(\"https://first-project-hsch.onrender.com/api/add-entry\", {\n        table: selectedTable,\n        data: formData\n      });\n      if (response.data.success) {\n        setMessage(\"✅ Entry added successfully!\");\n        setFormData({});\n      } else if (response.data.duplicate) {\n        setMessage(`Duplicate entry for ${uniqueKeys.join(\", \")}`);\n      } else {\n        setMessage(\"❌ Failed to add entry: \" + (response.data.message || \"\"));\n      }\n    } catch (error) {\n      var _error$response, _error$response$data, _error$response2, _error$response2$data;\n      const backendMessage = (_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message;\n\n      // Better error feedback\n      if (backendMessage && typeof backendMessage === \"string\") {\n        setMessage(`❌ ${backendMessage}`);\n      } else if ((_error$response2 = error.response) !== null && _error$response2 !== void 0 && (_error$response2$data = _error$response2.data) !== null && _error$response2$data !== void 0 && _error$response2$data.duplicateFields) {\n        const duplicateInfo = Object.entries(error.response.data.duplicateFields).map(([field, value]) => `${field}: \"${value}\"`).join(\", \");\n        setMessage(`❌ Duplicate entry: ${duplicateInfo}`);\n      } else {\n        setMessage(\"❌ Failed to add entry due to server error.\");\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: \"600px\",\n      margin: \"20px auto\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add Data to Table\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Choose Table:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedTable,\n      onChange: handleTableChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"add_user\",\n        children: \"User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"branch\",\n        children: \"Branch\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"vehicle\",\n        children: \"Vehicle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"custodian\",\n        children: \"Custodian\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"driver\",\n        children: \"Driver\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Manual Entry:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this), getFieldsForTable().map(field => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [field, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 5\n        }, this), selectedTable === \"add_user\" && field === \"role\" ? /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"role\",\n          value: formData[\"role\"] || \"\",\n          onChange: handleInputChange,\n          style: {\n            width: \"100%\",\n            marginBottom: \"10px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select Role\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"admin\",\n            children: \"Admin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"manager\",\n            children: \"Manager\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"user\",\n            children: \"User\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 7\n        }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: field,\n          value: formData[field] || \"\",\n          onChange: handleInputChange,\n          style: {\n            width: \"100%\",\n            marginBottom: \"10px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 7\n        }, this)]\n      }, field, true, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 3\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"OR Upload Excel File:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \".xlsx, .xls\",\n        ref: fileInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        style: {\n          marginTop: \"10px\"\n        },\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        marginTop: \"20px\",\n        color: \"green\"\n      },\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 182,\n    columnNumber: 5\n  }, this);\n};\n_s(AddTable, \"bIp2tE2igdnjiRNvO5IN/TyVHyo=\");\n_c = AddTable;\nexport default AddTable;\nvar _c;\n$RefreshReg$(_c, \"AddTable\");","map":{"version":3,"names":["React","useState","useRef","axios","XLSX","jsxDEV","_jsxDEV","AddTable","_s","selectedTable","setSelectedTable","formData","setFormData","message","setMessage","fileInputRef","UNIQUE_FIELDS","add_user","branch","vehicle","custodian","driver","handleInputChange","e","name","value","target","prev","handleTableChange","current","getFieldsForTable","readFileAsArrayBuffer","file","Promise","resolve","reject","reader","FileReader","onload","result","onerror","error","readAsArrayBuffer","err","handleSubmit","_fileInputRef$current","_fileInputRef$current2","fileFromInput","files","_response$data","data","workbook","read","type","sheetName","SheetNames","worksheet","Sheets","json","utils","sheet_to_json","uniqueFields","uniqueValues","Set","filteredRows","duplicateRows","row","key","Array","isArray","map","f","join","some","push","reason","has","add","length","uploadFormData","FormData","append","response","put","headers","inserted","_err$response","_err$response$data","uniqueKeys","missingKeys","filter","post","table","success","duplicate","_error$response","_error$response$data","_error$response2","_error$response2$data","backendMessage","duplicateFields","duplicateInfo","Object","entries","field","style","maxWidth","margin","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","marginTop","width","marginBottom","onClick","accept","ref","color","_c","$RefreshReg$"],"sources":["H:/project/first-project/client/src/AddTable.jsx"],"sourcesContent":["import React, { useState, useRef } from \"react\";\r\nimport axios from \"axios\";\r\nimport * as XLSX from \"xlsx\";\r\n\r\nconst AddTable = () => {\r\n  const [selectedTable, setSelectedTable] = useState(\"branch\");\r\n  const [formData, setFormData] = useState({});\r\n  const [message, setMessage] = useState(\"\");\r\n  const fileInputRef = useRef(null); // <-- Important: useRef for file input\r\n\r\n  const UNIQUE_FIELDS = {\r\n    add_user: [\"email\", \"name\"],\r\n    branch: [\"sol_id\", \"branch_name\"],\r\n    vehicle: [\"name\"],\r\n    custodian: [\"name\"],\r\n    driver: [\"name\"],\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleTableChange = (e) => {\r\n    setSelectedTable(e.target.value);\r\n    setFormData({});\r\n    if (fileInputRef.current) {\r\n      fileInputRef.current.value = null;\r\n    }\r\n    setMessage(\"\");\r\n  };\r\n\r\n  const getFieldsForTable = () => {\r\n    switch (selectedTable) {\r\n      case \"add_user\":\r\n        return [\"name\", \"email\", \"password\", \"role\"];\r\n      case \"branch\":\r\n        return [\"sol_id\", \"branch_name\", \"city\", \"circle\", \"bank_name\"];\r\n      case \"vehicle\":\r\n      case \"custodian\":\r\n      case \"driver\":\r\n        return [\"name\"];\r\n      default:\r\n        return [];\r\n    }\r\n  };\r\n\r\n  const readFileAsArrayBuffer = (file) => {\r\n    return new Promise((resolve, reject) => {\r\n      const reader = new FileReader();\r\n      reader.onload = () => resolve(reader.result);\r\n      reader.onerror = () => reject(reader.error);\r\n      try {\r\n        reader.readAsArrayBuffer(file);\r\n      } catch (err) {\r\n        reject(err);\r\n      }\r\n    });\r\n  };\r\n\r\nconst handleSubmit = async () => {\r\n  if (!selectedTable) {\r\n    setMessage(\"Please select a table.\");\r\n    return;\r\n  }\r\n\r\n  // Check if file is selected for upload\r\n  const fileFromInput = fileInputRef.current?.files?.[0];\r\n  if (fileFromInput) {\r\n    try {\r\n      const data = await readFileAsArrayBuffer(fileFromInput);\r\n      const workbook = XLSX.read(data, { type: \"array\" });\r\n      const sheetName = workbook.SheetNames[0];\r\n      const worksheet = workbook.Sheets[sheetName];\r\n      const json = XLSX.utils.sheet_to_json(worksheet);\r\n\r\n      const uniqueFields = UNIQUE_FIELDS[selectedTable];\r\n      const uniqueValues = new Set();\r\n      const filteredRows = [];\r\n      const duplicateRows = [];\r\n\r\n      for (const row of json) {\r\n        // Support multiple unique fields\r\n        const key = Array.isArray(uniqueFields)\r\n          ? uniqueFields.map((f) => row[f]).join(\"|\")\r\n          : row[uniqueFields];\r\n        if (\r\n          key == null ||\r\n          key === \"\" ||\r\n          (Array.isArray(uniqueFields) &&\r\n            uniqueFields.some((f) => !row[f] || row[f] === \"\"))\r\n        ) {\r\n          duplicateRows.push({ reason: `Missing ${uniqueFields}`, row });\r\n        } else if (uniqueValues.has(key)) {\r\n          duplicateRows.push({ reason: `Duplicate in file: ${key}`, row });\r\n        } else {\r\n          uniqueValues.add(key);\r\n          filteredRows.push(row);\r\n        }\r\n      }\r\n\r\n      if (filteredRows.length === 0) {\r\n        setMessage(\"No valid rows found in file. All are missing or duplicate.\");\r\n        return;\r\n      }\r\n      const uploadFormData = new FormData();\r\n      uploadFormData.append(\"file\", fileFromInput); // correct file object\r\n      uploadFormData.append(\"table\", selectedTable);\r\n\r\n      const response = await axios.put(\r\n        \"https://first-project-hsch.onrender.com/api/upload-file\",\r\n        uploadFormData,\r\n        {\r\n          headers: { \"Content-Type\": \"multipart/form-data\" },\r\n        }\r\n      );\r\n\r\n      if (response.data?.inserted > 0) {\r\n        setMessage(\r\n          `${response.data.inserted} rows inserted successfully.` +\r\n            (duplicateRows.length\r\n              ? ` ${duplicateRows.length} duplicate rows were skipped.`\r\n              : \"\")\r\n        );\r\n      } else {\r\n        setMessage(\"No rows inserted. All rows might be duplicates.\");\r\n      }\r\n\r\n      setFormData({});\r\n      fileInputRef.current.value = null;\r\n      return; // Exit after file upload\r\n    } catch (err) {\r\n      setMessage(\r\n        err?.response?.data?.message ||\r\n          \"Unexpected error occurred while uploading file.\"\r\n      );\r\n      return;\r\n    }\r\n  }\r\n\r\n  // Manual form entry\r\n  const uniqueKeys = UNIQUE_FIELDS[selectedTable];\r\n  const missingKeys = uniqueKeys.filter((key) => !formData[key]);\r\n\r\n  if (missingKeys.length > 0) {\r\n    setMessage(`Please enter: ${missingKeys.join(\", \")}`);\r\n    return;\r\n  }\r\n\r\n  try {\r\n    const response = await axios.post(\"https://first-project-hsch.onrender.com/api/add-entry\", {\r\n      table: selectedTable,\r\n      data: formData,\r\n    });\r\n\r\n    if (response.data.success) {\r\n      setMessage(\"✅ Entry added successfully!\");\r\n      setFormData({});\r\n    } else if (response.data.duplicate) {\r\n      setMessage(`Duplicate entry for ${uniqueKeys.join(\", \")}`);\r\n    } else {\r\n      setMessage(\"❌ Failed to add entry: \" + (response.data.message || \"\"));\r\n    }\r\n  } catch (error) {\r\n    const backendMessage = error.response?.data?.message;\r\n\r\n    // Better error feedback\r\n    if (backendMessage && typeof backendMessage === \"string\") {\r\n      setMessage(`❌ ${backendMessage}`);\r\n    } else if (error.response?.data?.duplicateFields) {\r\n      const duplicateInfo = Object.entries(error.response.data.duplicateFields)\r\n        .map(([field, value]) => `${field}: \"${value}\"`)\r\n        .join(\", \");\r\n      setMessage(`❌ Duplicate entry: ${duplicateInfo}`);\r\n    } else {\r\n      setMessage(\"❌ Failed to add entry due to server error.\");\r\n    }\r\n  }\r\n};\r\n\r\n  return (\r\n    <div style={{ maxWidth: \"600px\", margin: \"20px auto\" }}>\r\n      <h2>Add Data to Table</h2>\r\n\r\n      <label>Choose Table:</label>\r\n      <select value={selectedTable} onChange={handleTableChange}>\r\n        <option value=\"add_user\">User</option>\r\n        <option value=\"branch\">Branch</option>\r\n        <option value=\"vehicle\">Vehicle</option>\r\n        <option value=\"custodian\">Custodian</option>\r\n        <option value=\"driver\">Driver</option>\r\n      </select>\r\n\r\n      <div style={{ marginTop: \"20px\" }}>\r\n        <h4>Manual Entry:</h4>\r\n        {getFieldsForTable().map((field) => (\r\n  <div key={field}>\r\n    <label>{field}:</label>\r\n    {selectedTable === \"add_user\" && field === \"role\" ? (\r\n      <select\r\n        name=\"role\"\r\n        value={formData[\"role\"] || \"\"}\r\n        onChange={handleInputChange}\r\n        style={{ width: \"100%\", marginBottom: \"10px\" }}\r\n      >\r\n        <option value=\"\">Select Role</option>\r\n        <option value=\"admin\">Admin</option>\r\n        <option value=\"manager\">Manager</option>\r\n        <option value=\"user\">User</option>\r\n      </select>\r\n    ) : (\r\n      <input\r\n        type=\"text\"\r\n        name={field}\r\n        value={formData[field] || \"\"}\r\n        onChange={handleInputChange}\r\n        style={{ width: \"100%\", marginBottom: \"10px\" }}\r\n      />\r\n    )}\r\n  </div>\r\n))}\r\n\r\n\r\n        <button onClick={handleSubmit}>Submit</button>\r\n      </div>\r\n\r\n      <hr />\r\n\r\n      <div>\r\n        <h4>OR Upload Excel File:</h4>\r\n        <input type=\"file\" accept=\".xlsx, .xls\" ref={fileInputRef} />\r\n        <button onClick={handleSubmit} style={{ marginTop: \"10px\" }}>\r\n          Upload\r\n        </button>\r\n      </div>\r\n\r\n      <p style={{ marginTop: \"20px\", color: \"green\" }}>{message}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddTable;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC/C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,KAAKC,IAAI,MAAM,MAAM;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7B,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGT,QAAQ,CAAC,QAAQ,CAAC;EAC5D,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC5C,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAMc,YAAY,GAAGb,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;;EAEnC,MAAMc,aAAa,GAAG;IACpBC,QAAQ,EAAE,CAAC,OAAO,EAAE,MAAM,CAAC;IAC3BC,MAAM,EAAE,CAAC,QAAQ,EAAE,aAAa,CAAC;IACjCC,OAAO,EAAE,CAAC,MAAM,CAAC;IACjBC,SAAS,EAAE,CAAC,MAAM,CAAC;IACnBC,MAAM,EAAE,CAAC,MAAM;EACjB,CAAC;EAED,MAAMC,iBAAiB,GAAIC,CAAC,IAAK;IAC/B,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,CAAC,CAACG,MAAM;IAChCd,WAAW,CAAEe,IAAI,KAAM;MAAE,GAAGA,IAAI;MAAE,CAACH,IAAI,GAAGC;IAAM,CAAC,CAAC,CAAC;EACrD,CAAC;EAED,MAAMG,iBAAiB,GAAIL,CAAC,IAAK;IAC/Bb,gBAAgB,CAACa,CAAC,CAACG,MAAM,CAACD,KAAK,CAAC;IAChCb,WAAW,CAAC,CAAC,CAAC,CAAC;IACf,IAAIG,YAAY,CAACc,OAAO,EAAE;MACxBd,YAAY,CAACc,OAAO,CAACJ,KAAK,GAAG,IAAI;IACnC;IACAX,UAAU,CAAC,EAAE,CAAC;EAChB,CAAC;EAED,MAAMgB,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,QAAQrB,aAAa;MACnB,KAAK,UAAU;QACb,OAAO,CAAC,MAAM,EAAE,OAAO,EAAE,UAAU,EAAE,MAAM,CAAC;MAC9C,KAAK,QAAQ;QACX,OAAO,CAAC,QAAQ,EAAE,aAAa,EAAE,MAAM,EAAE,QAAQ,EAAE,WAAW,CAAC;MACjE,KAAK,SAAS;MACd,KAAK,WAAW;MAChB,KAAK,QAAQ;QACX,OAAO,CAAC,MAAM,CAAC;MACjB;QACE,OAAO,EAAE;IACb;EACF,CAAC;EAED,MAAMsB,qBAAqB,GAAIC,IAAI,IAAK;IACtC,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;MACtC,MAAMC,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;MAC/BD,MAAM,CAACE,MAAM,GAAG,MAAMJ,OAAO,CAACE,MAAM,CAACG,MAAM,CAAC;MAC5CH,MAAM,CAACI,OAAO,GAAG,MAAML,MAAM,CAACC,MAAM,CAACK,KAAK,CAAC;MAC3C,IAAI;QACFL,MAAM,CAACM,iBAAiB,CAACV,IAAI,CAAC;MAChC,CAAC,CAAC,OAAOW,GAAG,EAAE;QACZR,MAAM,CAACQ,GAAG,CAAC;MACb;IACF,CAAC,CAAC;EACJ,CAAC;EAEH,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAAA,IAAAC,qBAAA,EAAAC,sBAAA;IAC/B,IAAI,CAACrC,aAAa,EAAE;MAClBK,UAAU,CAAC,wBAAwB,CAAC;MACpC;IACF;;IAEA;IACA,MAAMiC,aAAa,IAAAF,qBAAA,GAAG9B,YAAY,CAACc,OAAO,cAAAgB,qBAAA,wBAAAC,sBAAA,GAApBD,qBAAA,CAAsBG,KAAK,cAAAF,sBAAA,uBAA3BA,sBAAA,CAA8B,CAAC,CAAC;IACtD,IAAIC,aAAa,EAAE;MACjB,IAAI;QAAA,IAAAE,cAAA;QACF,MAAMC,IAAI,GAAG,MAAMnB,qBAAqB,CAACgB,aAAa,CAAC;QACvD,MAAMI,QAAQ,GAAG/C,IAAI,CAACgD,IAAI,CAACF,IAAI,EAAE;UAAEG,IAAI,EAAE;QAAQ,CAAC,CAAC;QACnD,MAAMC,SAAS,GAAGH,QAAQ,CAACI,UAAU,CAAC,CAAC,CAAC;QACxC,MAAMC,SAAS,GAAGL,QAAQ,CAACM,MAAM,CAACH,SAAS,CAAC;QAC5C,MAAMI,IAAI,GAAGtD,IAAI,CAACuD,KAAK,CAACC,aAAa,CAACJ,SAAS,CAAC;QAEhD,MAAMK,YAAY,GAAG7C,aAAa,CAACP,aAAa,CAAC;QACjD,MAAMqD,YAAY,GAAG,IAAIC,GAAG,CAAC,CAAC;QAC9B,MAAMC,YAAY,GAAG,EAAE;QACvB,MAAMC,aAAa,GAAG,EAAE;QAExB,KAAK,MAAMC,GAAG,IAAIR,IAAI,EAAE;UACtB;UACA,MAAMS,GAAG,GAAGC,KAAK,CAACC,OAAO,CAACR,YAAY,CAAC,GACnCA,YAAY,CAACS,GAAG,CAAEC,CAAC,IAAKL,GAAG,CAACK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC,GACzCN,GAAG,CAACL,YAAY,CAAC;UACrB,IACEM,GAAG,IAAI,IAAI,IACXA,GAAG,KAAK,EAAE,IACTC,KAAK,CAACC,OAAO,CAACR,YAAY,CAAC,IAC1BA,YAAY,CAACY,IAAI,CAAEF,CAAC,IAAK,CAACL,GAAG,CAACK,CAAC,CAAC,IAAIL,GAAG,CAACK,CAAC,CAAC,KAAK,EAAE,CAAE,EACrD;YACAN,aAAa,CAACS,IAAI,CAAC;cAAEC,MAAM,EAAE,WAAWd,YAAY,EAAE;cAAEK;YAAI,CAAC,CAAC;UAChE,CAAC,MAAM,IAAIJ,YAAY,CAACc,GAAG,CAACT,GAAG,CAAC,EAAE;YAChCF,aAAa,CAACS,IAAI,CAAC;cAAEC,MAAM,EAAE,sBAAsBR,GAAG,EAAE;cAAED;YAAI,CAAC,CAAC;UAClE,CAAC,MAAM;YACLJ,YAAY,CAACe,GAAG,CAACV,GAAG,CAAC;YACrBH,YAAY,CAACU,IAAI,CAACR,GAAG,CAAC;UACxB;QACF;QAEA,IAAIF,YAAY,CAACc,MAAM,KAAK,CAAC,EAAE;UAC7BhE,UAAU,CAAC,4DAA4D,CAAC;UACxE;QACF;QACA,MAAMiE,cAAc,GAAG,IAAIC,QAAQ,CAAC,CAAC;QACrCD,cAAc,CAACE,MAAM,CAAC,MAAM,EAAElC,aAAa,CAAC,CAAC,CAAC;QAC9CgC,cAAc,CAACE,MAAM,CAAC,OAAO,EAAExE,aAAa,CAAC;QAE7C,MAAMyE,QAAQ,GAAG,MAAM/E,KAAK,CAACgF,GAAG,CAC9B,yDAAyD,EACzDJ,cAAc,EACd;UACEK,OAAO,EAAE;YAAE,cAAc,EAAE;UAAsB;QACnD,CACF,CAAC;QAED,IAAI,EAAAnC,cAAA,GAAAiC,QAAQ,CAAChC,IAAI,cAAAD,cAAA,uBAAbA,cAAA,CAAeoC,QAAQ,IAAG,CAAC,EAAE;UAC/BvE,UAAU,CACR,GAAGoE,QAAQ,CAAChC,IAAI,CAACmC,QAAQ,8BAA8B,IACpDpB,aAAa,CAACa,MAAM,GACjB,IAAIb,aAAa,CAACa,MAAM,+BAA+B,GACvD,EAAE,CACV,CAAC;QACH,CAAC,MAAM;UACLhE,UAAU,CAAC,iDAAiD,CAAC;QAC/D;QAEAF,WAAW,CAAC,CAAC,CAAC,CAAC;QACfG,YAAY,CAACc,OAAO,CAACJ,KAAK,GAAG,IAAI;QACjC,OAAO,CAAC;MACV,CAAC,CAAC,OAAOkB,GAAG,EAAE;QAAA,IAAA2C,aAAA,EAAAC,kBAAA;QACZzE,UAAU,CACR,CAAA6B,GAAG,aAAHA,GAAG,wBAAA2C,aAAA,GAAH3C,GAAG,CAAEuC,QAAQ,cAAAI,aAAA,wBAAAC,kBAAA,GAAbD,aAAA,CAAepC,IAAI,cAAAqC,kBAAA,uBAAnBA,kBAAA,CAAqB1E,OAAO,KAC1B,iDACJ,CAAC;QACD;MACF;IACF;;IAEA;IACA,MAAM2E,UAAU,GAAGxE,aAAa,CAACP,aAAa,CAAC;IAC/C,MAAMgF,WAAW,GAAGD,UAAU,CAACE,MAAM,CAAEvB,GAAG,IAAK,CAACxD,QAAQ,CAACwD,GAAG,CAAC,CAAC;IAE9D,IAAIsB,WAAW,CAACX,MAAM,GAAG,CAAC,EAAE;MAC1BhE,UAAU,CAAC,iBAAiB2E,WAAW,CAACjB,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;MACrD;IACF;IAEA,IAAI;MACF,MAAMU,QAAQ,GAAG,MAAM/E,KAAK,CAACwF,IAAI,CAAC,uDAAuD,EAAE;QACzFC,KAAK,EAAEnF,aAAa;QACpByC,IAAI,EAAEvC;MACR,CAAC,CAAC;MAEF,IAAIuE,QAAQ,CAAChC,IAAI,CAAC2C,OAAO,EAAE;QACzB/E,UAAU,CAAC,6BAA6B,CAAC;QACzCF,WAAW,CAAC,CAAC,CAAC,CAAC;MACjB,CAAC,MAAM,IAAIsE,QAAQ,CAAChC,IAAI,CAAC4C,SAAS,EAAE;QAClChF,UAAU,CAAC,uBAAuB0E,UAAU,CAAChB,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;MAC5D,CAAC,MAAM;QACL1D,UAAU,CAAC,yBAAyB,IAAIoE,QAAQ,CAAChC,IAAI,CAACrC,OAAO,IAAI,EAAE,CAAC,CAAC;MACvE;IACF,CAAC,CAAC,OAAO4B,KAAK,EAAE;MAAA,IAAAsD,eAAA,EAAAC,oBAAA,EAAAC,gBAAA,EAAAC,qBAAA;MACd,MAAMC,cAAc,IAAAJ,eAAA,GAAGtD,KAAK,CAACyC,QAAQ,cAAAa,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgB7C,IAAI,cAAA8C,oBAAA,uBAApBA,oBAAA,CAAsBnF,OAAO;;MAEpD;MACA,IAAIsF,cAAc,IAAI,OAAOA,cAAc,KAAK,QAAQ,EAAE;QACxDrF,UAAU,CAAC,KAAKqF,cAAc,EAAE,CAAC;MACnC,CAAC,MAAM,KAAAF,gBAAA,GAAIxD,KAAK,CAACyC,QAAQ,cAAAe,gBAAA,gBAAAC,qBAAA,GAAdD,gBAAA,CAAgB/C,IAAI,cAAAgD,qBAAA,eAApBA,qBAAA,CAAsBE,eAAe,EAAE;QAChD,MAAMC,aAAa,GAAGC,MAAM,CAACC,OAAO,CAAC9D,KAAK,CAACyC,QAAQ,CAAChC,IAAI,CAACkD,eAAe,CAAC,CACtE9B,GAAG,CAAC,CAAC,CAACkC,KAAK,EAAE/E,KAAK,CAAC,KAAK,GAAG+E,KAAK,MAAM/E,KAAK,GAAG,CAAC,CAC/C+C,IAAI,CAAC,IAAI,CAAC;QACb1D,UAAU,CAAC,sBAAsBuF,aAAa,EAAE,CAAC;MACnD,CAAC,MAAM;QACLvF,UAAU,CAAC,4CAA4C,CAAC;MAC1D;IACF;EACF,CAAC;EAEC,oBACER,OAAA;IAAKmG,KAAK,EAAE;MAAEC,QAAQ,EAAE,OAAO;MAAEC,MAAM,EAAE;IAAY,CAAE;IAAAC,QAAA,gBACrDtG,OAAA;MAAAsG,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAE1B1G,OAAA;MAAAsG,QAAA,EAAO;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAC5B1G,OAAA;MAAQmB,KAAK,EAAEhB,aAAc;MAACwG,QAAQ,EAAErF,iBAAkB;MAAAgF,QAAA,gBACxDtG,OAAA;QAAQmB,KAAK,EAAC,UAAU;QAAAmF,QAAA,EAAC;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACtC1G,OAAA;QAAQmB,KAAK,EAAC,QAAQ;QAAAmF,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACtC1G,OAAA;QAAQmB,KAAK,EAAC,SAAS;QAAAmF,QAAA,EAAC;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACxC1G,OAAA;QAAQmB,KAAK,EAAC,WAAW;QAAAmF,QAAA,EAAC;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC5C1G,OAAA;QAAQmB,KAAK,EAAC,QAAQ;QAAAmF,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC,eAET1G,OAAA;MAAKmG,KAAK,EAAE;QAAES,SAAS,EAAE;MAAO,CAAE;MAAAN,QAAA,gBAChCtG,OAAA;QAAAsG,QAAA,EAAI;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACrBlF,iBAAiB,CAAC,CAAC,CAACwC,GAAG,CAAEkC,KAAK,iBACrClG,OAAA;QAAAsG,QAAA,gBACEtG,OAAA;UAAAsG,QAAA,GAAQJ,KAAK,EAAC,GAAC;QAAA;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,EACtBvG,aAAa,KAAK,UAAU,IAAI+F,KAAK,KAAK,MAAM,gBAC/ClG,OAAA;UACEkB,IAAI,EAAC,MAAM;UACXC,KAAK,EAAEd,QAAQ,CAAC,MAAM,CAAC,IAAI,EAAG;UAC9BsG,QAAQ,EAAE3F,iBAAkB;UAC5BmF,KAAK,EAAE;YAAEU,KAAK,EAAE,MAAM;YAAEC,YAAY,EAAE;UAAO,CAAE;UAAAR,QAAA,gBAE/CtG,OAAA;YAAQmB,KAAK,EAAC,EAAE;YAAAmF,QAAA,EAAC;UAAW;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACrC1G,OAAA;YAAQmB,KAAK,EAAC,OAAO;YAAAmF,QAAA,EAAC;UAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACpC1G,OAAA;YAAQmB,KAAK,EAAC,SAAS;YAAAmF,QAAA,EAAC;UAAO;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACxC1G,OAAA;YAAQmB,KAAK,EAAC,MAAM;YAAAmF,QAAA,EAAC;UAAI;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5B,CAAC,gBAET1G,OAAA;UACE+C,IAAI,EAAC,MAAM;UACX7B,IAAI,EAAEgF,KAAM;UACZ/E,KAAK,EAAEd,QAAQ,CAAC6F,KAAK,CAAC,IAAI,EAAG;UAC7BS,QAAQ,EAAE3F,iBAAkB;UAC5BmF,KAAK,EAAE;YAAEU,KAAK,EAAE,MAAM;YAAEC,YAAY,EAAE;UAAO;QAAE;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChD,CACF;MAAA,GAtBOR,KAAK;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAuBV,CACN,CAAC,eAGM1G,OAAA;QAAQ+G,OAAO,EAAEzE,YAAa;QAAAgE,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CAAC,eAEN1G,OAAA;MAAAuG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAEN1G,OAAA;MAAAsG,QAAA,gBACEtG,OAAA;QAAAsG,QAAA,EAAI;MAAqB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC9B1G,OAAA;QAAO+C,IAAI,EAAC,MAAM;QAACiE,MAAM,EAAC,aAAa;QAACC,GAAG,EAAExG;MAAa;QAAA8F,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC7D1G,OAAA;QAAQ+G,OAAO,EAAEzE,YAAa;QAAC6D,KAAK,EAAE;UAAES,SAAS,EAAE;QAAO,CAAE;QAAAN,QAAA,EAAC;MAE7D;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eAEN1G,OAAA;MAAGmG,KAAK,EAAE;QAAES,SAAS,EAAE,MAAM;QAAEM,KAAK,EAAE;MAAQ,CAAE;MAAAZ,QAAA,EAAE/F;IAAO;MAAAgG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3D,CAAC;AAEV,CAAC;AAACxG,EAAA,CA3OID,QAAQ;AAAAkH,EAAA,GAARlH,QAAQ;AA6Od,eAAeA,QAAQ;AAAC,IAAAkH,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}